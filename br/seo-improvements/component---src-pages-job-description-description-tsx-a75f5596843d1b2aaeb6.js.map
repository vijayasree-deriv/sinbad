{"version":3,"file":"component---src-pages-job-description-description-tsx-a75f5596843d1b2aaeb6.js","mappings":"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","sources":["webpack://sinbad-dev/./src/pages/job-description/description.tsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport { JobTitleProps } from './data'\nimport { Card } from 'components/containers/flex'\nimport { ContainerWrapper, Header } from 'components/containers'\nimport { BlueBackground } from 'images/common/jd'\nimport device from 'themes/device'\n\nconst DescriptionContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    background-image: url(${BlueBackground});\n    background-repeat: no-repeat;\n    background-size: 45% 100%;\n    width: 100%;\n    height: 100%;\n`\n\nconst DescriptionContainerWrapper = styled(ContainerWrapper)`\n    padding: 50px 0;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n`\n\nconst StyledHeader = styled(Header)`\n    text-transform: uppercase;\n    color: var(--color-sand-4);\n    font-size: 3.8rem;\n    line-height: 50px;\n    font-weight: 560;\n    font-family: ${(props) => props.font_family || 'Maven Pro Bold'};\n\n    @media ${device.tabletL} {\n        text-align: center;\n        padding: 0px;\n    }\n`\n\nconst HeaderImageContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    padding-top: 30px;\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n        align-items: center;\n    }\n`\n\nconst JDContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding-bottom: 60px;\n\n    @media ${device.laptopL} {\n        width: 90%;\n    }\n`\n\nconst StyledCard = styled(Card)`\n    display: flex;\n    flex-direction: column;\n    max-width: 1190px;\n    margin: 20px 0;\n\n    @media ${device.tabletL} {\n        align-items: center;\n        padding: 10px;\n    }\n`\n\nconst StyledImg = styled.div`\n    padding-right: 50px;\n    align-items: flex-end;\n\n    @media ${device.tabletL} {\n        align-items: center;\n        padding: 10px 0px;\n    }\n`\n\nconst ArrowImage = styled.div`\n    flex: none;\n    width: 18px;\n    height: 18px;\n    margin-top: 8px;\n    align-self: start;\n    @media ${device.laptopL} {\n        margin-top: 10px;\n    }\n`\n\nconst StyledList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-items: flex-start;\n    padding-top: 20px;\n    padding-bottom: 50px;\n\n    @media ${device.tabletL} {\n        padding-top: 30px;\n        padding-right: 30px;\n    }\n\n    @media ${device.mobileL} {\n        padding-top: 30px;\n        padding-right: 10px;\n    }\n`\n\nconst StyledListItem = styled.li<{ pb?: string }>`\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-content: center;\n    color: var(--color-black-3);\n    padding-left: 75px;\n    max-width: 1000px;\n    padding-bottom: ${(props) => props.pb || 'unset'};\n\n    @media ${device.laptopL} {\n        max-width: 950px;\n    }\n\n    @media ${device.tabletL} {\n        max-width: 700px;\n        padding-left: 10px;\n    }\n    @media ${device.tablet} {\n        max-width: 600px;\n        padding-left: 25px;\n    }\n`\n\nconst StyledText = styled.div<{\n    font_family?: string\n    padding?: string\n    mobile_ta?: string\n    max_width?: string\n}>`\n    font-size: 1.9rem;\n    line-height: 33px;\n    color: var(--color-black-2);\n    font-weight: 320;\n    text-align: left;\n    font-family: ${(props) => props.font_family || 'Maven Pro'};\n    padding: ${(props) => props.padding || 'unset'};\n    display: flex;\n    align-items: center;\n    max-width: ${(props) => props.max_width || 'none'};\n\n    @media ${device.tabletL} {\n        padding: 0px 10px;\n    }\n\n    @media ${device.tablet} {\n        text-align: ${(props) => props.mobile_ta || 'center'};\n    }\n`\n\nconst Description = ({ position }: JobTitleProps) => {\n    return (\n        <DescriptionContainer>\n            <DescriptionContainerWrapper>\n                <JDContainer>\n                    <StyledCard ai=\"center\">\n                        {position?.description.map((paragraph, index) => {\n                            return (\n                                <StyledText padding=\"50px 75px\" max_width=\"1100px\" key={index}>\n                                    {paragraph}\n                                </StyledText>\n                            )\n                        })}\n                    </StyledCard>\n                    <StyledCard direction=\"column\">\n                        <HeaderImageContainer>\n                            <StyledHeader>Your challenges</StyledHeader>\n                            <StyledImg>\n                                <StaticImage\n                                    src=\"../../images/common/jd/challenges.png\"\n                                    alt=\"career join us image\"\n                                    placeholder=\"none\"\n                                />\n                            </StyledImg>\n                        </HeaderImageContainer>\n                        <StyledList>\n                            {position?.challenges.map((challenge, index) => {\n                                return (\n                                    <StyledListItem key={index}>\n                                        <ArrowImage>\n                                            <StaticImage\n                                                src=\"../../images/common/jd/arrow.png\"\n                                                alt=\"career join us image\"\n                                                placeholder=\"none\"\n                                            />\n                                        </ArrowImage>\n                                        <StyledText padding=\"0 0 0 10px\" mobile_ta=\"left\">\n                                            {challenge}\n                                        </StyledText>\n                                    </StyledListItem>\n                                )\n                            })}\n                        </StyledList>\n                    </StyledCard>\n                    <StyledCard direction=\"column\">\n                        <HeaderImageContainer>\n                            <StyledHeader>Our Team</StyledHeader>\n                            <StyledImg>\n                                <StaticImage\n                                    src=\"../../images/common/jd/team.png\"\n                                    alt=\"career join us image\"\n                                    placeholder=\"none\"\n                                />\n                            </StyledImg>\n                        </HeaderImageContainer>\n                        <StyledText padding=\"25px 75px 50px\" max_width=\"1050px\">\n                            {position?.team}\n                        </StyledText>\n                    </StyledCard>\n                    <StyledCard direction=\"column\">\n                        <HeaderImageContainer>\n                            <StyledHeader>Requirements</StyledHeader>\n                            <StyledImg>\n                                <StaticImage\n                                    src=\"../../images/common/jd/requirements.png\"\n                                    alt=\"career join us image\"\n                                    placeholder=\"none\"\n                                />\n                            </StyledImg>\n                        </HeaderImageContainer>\n                        <StyledList>\n                            {position?.requirements.map((requirement, index) => {\n                                return (\n                                    <StyledListItem key={index}>\n                                        <ArrowImage>\n                                            <StaticImage\n                                                src=\"../../images/common/jd/arrow.png\"\n                                                alt=\"career join us image\"\n                                                placeholder=\"none\"\n                                            />\n                                        </ArrowImage>\n                                        <StyledText padding=\"0 0 0 10px\" mobile_ta=\"left\">\n                                            {requirement}\n                                        </StyledText>\n                                    </StyledListItem>\n                                )\n                            })}\n                        </StyledList>\n                    </StyledCard>\n                    {position?.good_to_have.length && (\n                        <StyledCard direction=\"column\">\n                            <HeaderImageContainer>\n                                <StyledHeader>What’s good to have</StyledHeader>\n                                <StyledImg>\n                                    <StaticImage\n                                        src=\"../../images/common/jd/good-to-have.png\"\n                                        alt=\"career join us image\"\n                                        placeholder=\"none\"\n                                    />\n                                </StyledImg>\n                            </HeaderImageContainer>\n                            <StyledList>\n                                {position?.good_to_have.map((ability, index) => {\n                                    return (\n                                        <StyledListItem key={index}>\n                                            <ArrowImage>\n                                                <StaticImage\n                                                    src=\"../../images/common/jd/arrow.png\"\n                                                    alt=\"career join us image\"\n                                                    placeholder=\"none\"\n                                                />\n                                            </ArrowImage>\n                                            <StyledText padding=\"0 0 0 10px\" mobile_ta=\"left\">\n                                                {ability}\n                                            </StyledText>\n                                        </StyledListItem>\n                                    )\n                                })}\n                            </StyledList>\n                        </StyledCard>\n                    )}\n                </JDContainer>\n            </DescriptionContainerWrapper>\n        </DescriptionContainer>\n    )\n}\n\nexport default Description\n"],"names":["DescriptionContainer","styled","BlueBackground","DescriptionContainerWrapper","ContainerWrapper","withConfig","StyledHeader","Header","props","font_family","device","HeaderImageContainer","JDContainer","StyledCard","Card","StyledImg","ArrowImage","StyledList","StyledListItem","pb","StyledText","padding","max_width","mobile_ta","position","React","ai","description","map","paragraph","index","key","direction","StaticImage","src","alt","placeholder","challenges","challenge","team","requirements","requirement","good_to_have","length","ability"],"sourceRoot":""}